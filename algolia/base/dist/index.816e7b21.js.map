{"mappings":"AAAA,MAAM,EAAE,aAAa,CAAA,EAAE,aAAa,CAAA,EAAE,GAAG,MAAM,AAAC;AAEhD,MAAM,YAAY,GAAG,aAAa,CAChC,YAAY,EACZ,kCAAkC,CACnC,AAAC;AAEF,MAAM,MAAM,GAAG,aAAa,CAAC;IAC3B,SAAS,EAAE,YAAY;IACvB,YAAY;CACb,CAAC,AAAC;AAEH,gBAAgB;AAChB,8BAA8B;AAC9B,MAAM,kBAAkB,GAAG,CAAC,aAAa,EAAE,aAAa,GAAK;AAC3D,kBAAkB;CACnB,AAAC;AAEF,8BAA8B;AAC9B,MAAM,kBAAkB,GAAG,aAAa,CAAC,UAAU,CAAC,mBAAmB,CACrE,kBAAkB,CACnB,AAAC;AAEF,iBAAiB;AACjB,MAAM,CAAC,UAAU,CAAC;IAChB,kBAAkB,CAAC;KAElB,CAAC;CACH,CAAC,CAAC;AAEH,MAAM,CAAC,UAAU,CAAC;IAChB,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC;QAC9B,SAAS,EAAE,YAAY;QACvB,WAAW,EAAE,eAAe;QAC5B,UAAU,EAAE,IAAI;KACjB,CAAC;IACF,aAAa,CAAC,OAAO,CAAC,cAAc,CAAC;QACnC,SAAS,EAAE,cAAc;QACzB,SAAS,EAAE,eAAe;KAC3B,CAAC;IACF,aAAa,CAAC,OAAO,CAAC,cAAc,CAAC;QACnC,SAAS,EAAE,WAAW;QACtB,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,YAAY;KACrB,CAAC;IACF,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC;QAC9B,WAAW,EAAE,EAAE;KAChB,CAAC;IACF,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC;QACzB,SAAS,EAAE,OAAO;QAClB,SAAS,EAAE;YACT,IAAI,EAAE,CAAC;;;;;;;;;;;;;;;;;AAiBb,CAAC;YACK,KAAK,EAAE,kCAAkC;SAC1C;KACF,CAAC;IACF,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC;QAC9B,MAAM,EAAE;YAAC,GAAG;SAAC;QACb,iBAAiB,EAAE,EAAE;KACtB,CAAC;IACF,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC;QAC/B,SAAS,EAAE,aAAa;QACxB,SAAS,EAAE,IAAI;QACf,QAAQ,EAAE,IAAI;KACf,CAAC;CACH,CAAC,CAAC;AAEH,KAAK;AACL,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC;IAC3B,SAAS,EAAE,UAAU;IACrB,KAAK,EAAE;QACL;YAAE,KAAK,EAAE,UAAU;YAAE,KAAK,EAAE,gBAAgB;SAAE;QAC9C;YAAE,KAAK,EAAE,aAAa;YAAE,KAAK,EAAE,0BAA0B;SAAE;QAC3D;YAAE,KAAK,EAAE,cAAc;YAAE,KAAK,EAAE,2BAA2B;SAAE;KAC9D;CACF,CAAC,CAAC;AAGH,MAAM,CAAC,KAAK,EAAE,CAAC","sources":["src/app.js"],"sourcesContent":["const { algoliasearch, instantsearch } = window;\n\nconst searchClient = algoliasearch(\n  '0L0TPDZHFM',\n  '1a42927a7a1ffc3661c466e3a7acda87'\n);\n\nconst search = instantsearch({\n  indexName: 'milestone1',\n  searchClient,\n});\n\n// Autocomplete \n// 1. Create a render function\nconst renderAutocomplete = (renderOptions, isFirstRender) => {\n  // Rendering logic\n};\n\n// 2. Create the custom widget\nconst customAutocomplete = instantsearch.connectors.connectAutocomplete(\n  renderAutocomplete\n);\n\n// 3. Instantiate\nsearch.addWidgets([\n  customAutocomplete({\n    // instance params\n  })\n]);\n\nsearch.addWidgets([\n  instantsearch.widgets.searchBox({\n    container: '#searchbox',\n    placeholder: 'Search here..',\n    showSubmit: true\n  }),\n  instantsearch.widgets.refinementList({\n    container: '#filter-list',\n    attribute: 'filelength(s)',\n  }),\n  instantsearch.widgets.refinementList({\n    container: '#fps-list',\n    attribute: 'fps',\n    showMore: true,\n    soryBy: 'count:desc',\n  }),\n  instantsearch.widgets.configure({\n    hitsPerPage: 16\n  }),\n  instantsearch.widgets.hits({\n    container: '#hits',\n    templates: {\n      item: `\n<div>\n      <div class=\"hit-face\">\n        {{#helpers.highlight}}{ \"attribute\": \"face\" }{{/helpers.highlight}}\n      </div>\n      <div class=\"hit-action\">\n        {{#helpers.highlight}}{ \"attribute\": \"action\" }{{/helpers.highlight}}\n      </div>\n      <div class=\"hit-file\">\n      filename:\n      {{#helpers.highlight}}{ \"attribute\": \"filename\" }{{/helpers.highlight}}\n      </div>\n      <div class=\"hit-frame\">frame:{{frame}}</div>\n      <div class=\"hit-timestamp\">timestamp(s):{{timestamp(s)}}</div>\n      <div class=\"hit-filelen\">filelength(s):{{filelength(s)}}</div>\n      <div class=\"hit-fps\">fps:{{fps}}</div>\n    </div>\n`,\n      empty: 'No result for <q>{{ query }}</q>'\n    },\n  }),\n  instantsearch.widgets.configure({\n    facets: ['*'],\n    maxValuesPerFacet: 20,\n  }),\n  instantsearch.widgets.pagination({\n    container: '#pagination',\n    showFirst: true,\n    showLast: true\n  }),\n]);\n\n//TBD\ninstantsearch.widgets.sortBy({\n  container: '#sort-by',\n  items: [\n    { label: 'Featured', value: 'instant_search' },\n    { label: 'Price (asc)', value: 'instant_search_price_asc' },\n    { label: 'Price (desc)', value: 'instant_search_price_desc' },\n  ],\n});\n\n\nsearch.start();\n"],"names":[],"version":3,"file":"index.816e7b21.js.map","sourceRoot":"/__parcel_source_root/"}